import pytest

from app.v1.endpoints.deposit import calculate


@pytest.mark.parametrize(
    "amount, date, periods, rate, expected_result",
    [
        (10000, "01.01.2023", 1, 5.0, {"01.01.2023": 10041.67}),
        (
            500000,
            "31.01.2023",
            12,
            2.5,
            {
                "31.01.2023": 501041.67,
                "28.02.2023": 502085.5,
                "31.03.2023": 503131.51,
                "30.04.2023": 504179.71,
                "31.05.2023": 505230.08,
                "30.06.2023": 506282.64,
                "31.07.2023": 507337.4,
                "31.08.2023": 508394.35,
                "30.09.2023": 509453.51,
                "31.10.2023": 510514.87,
                "30.11.2023": 511578.44,
                "31.12.2023": 512644.23,
            },
        ),
        (
            3000000,
            "17.01.2023",
            30,
            8,
            {
                "17.01.2023": 3020000,
                "17.02.2023": 3040133.33,
                "17.03.2023": 3060400.89,
                "17.04.2023": 3080803.56,
                "17.05.2023": 3101342.25,
                "17.06.2023": 3122017.87,
                "17.07.2023": 3142831.32,
                "17.08.2023": 3163783.53,
                "17.09.2023": 3184875.42,
                "17.10.2023": 3206107.92,
                "17.11.2023": 3227481.97,
                "17.12.2023": 3248998.52,
                "17.01.2024": 3270658.51,
                "17.02.2024": 3292462.9,
                "17.03.2024": 3314412.65,
                "17.04.2024": 3336508.74,
                "17.05.2024": 3358752.13,
                "17.06.2024": 3381143.81,
                "17.07.2024": 3403684.77,
                "17.08.2024": 3426376,
                "17.09.2024": 3449218.51,
                "17.10.2024": 3472213.3,
                "17.11.2024": 3495361.39,
                "17.12.2024": 3518663.8,
                "17.01.2025": 3542121.55,
                "17.02.2025": 3565735.7,
                "17.03.2025": 3589507.27,
                "17.04.2025": 3613437.32,
                "17.05.2025": 3637526.9,
                "17.06.2025": 3661777.08,
            },
        ),
    ],
)
@pytest.mark.asyncio
async def test_calculate(amount, date, periods, rate, expected_result):
    result = await calculate(amount, date, periods, rate)
    assert result == expected_result
